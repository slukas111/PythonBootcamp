# -*- coding: utf-8 -*-
"""Katas_Basic_Looping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/KenzieAcademy/python-notebooks/blob/master/Katas_Basic_Looping.ipynb

<table border="0" align="left" width="700" height="144">
<tbody>
<tr>
<td width="120"><img width="100" src="https://static1.squarespace.com/static/5992c2c7a803bb8283297efe/t/59c803110abd04d34ca9a1f0/1530629279239/" /></td>
<td style="width: 600px; height: 67px;">
<h1 style="text-align: left;">Katas: Basic Looping</h1>
<p><a href="https://colab.research.google.com/github/KenzieAcademy/python-notebooks/blob/master/Katas_Basic_Looping.ipynb"> <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab" align="left" width="188" height="32" /> </a></p>
</td>
</tr>
</tbody>
</table>
"""



"""## Instructions

**Use SHIFT+ENTER to run each cell.**
These exercises use a tool called Juptyer Notebook. Here are some quick guidelines:

- Each block of python code is called a cell.
- You are running an actual python program, cell-by-cell.
- You can edit and re-run the code cells in place without overwriting the original notebook.
- Don't worry about the In [x]: or Out [y]: notations on the left margin.
- Variables are remembered between cells.
- Please use the `print()` function when displaying your answers.
- Don't worry about formatting your output to print everything on a single line.


## Submitting your work
- Add your python code into each cell to complete the kata.
- Select **File -> Download as -> Python (.py)** and save to your local machine.
- Submit your .py file into the assignment upload window.
- Bonus Points: Try the same exercises using list comprehensions. Submit a second .py file.

### Let us begin..

1. Print a list of integers from 1 to 20. *e.g.,* [1, 2, 3, ...,19, 20]
"""

print('Integers from 1 to 20:')
for i in range(20):
  print(i+1)

print(list(range(1,21)))

"""2. Print only the even numbers from 1 to 20. *e.g.,* [2, 4, 6, ..., 18, 20].  Remember that range() accepts 3 arguments..."""

print('Evens from 1 to 20:')
for i in range(1,20+1):
  if i % 2 ==0:
    print(i)

print(list(range(2,21,2)))

"""3. Print only the odd numbers from 1 to 20. *e.g.,* [1, 3, 5, ..., 17, 19]"""

print('Odds from 1 to 20:')
for i in range(1,20+1):
  if i % 2 != 0:
    print(i)

print(list(range(1,20,2)))

"""4. Print the multiples of 5, from 5 to 100. *e.g.,* [5, 10, 15, ..., 95, 100]"""

print('Multiples of 5, from 5 to 100:')
for i in range(1,100+1):
  if i % 5 == 0:
    print(i)

print(list(range(5,101,5)))

mult5 = [num for num in range(1,101) if num % 5 ==0]
print(mult5)

"""5. Print the squares of integers from 1 to 10. *e.g.,* [1, 4, 9, ..., 81, 100]"""

print('Squares of integers from 1 to 10:')
for i in range(1, 10+1):
  num = i * i
  print(num)

squares = [num **2 for num in range(1,10+1)]
print(squares)

result = []
for n in range(1,11):
  result.append(n*n)
print(result)

"""6. Print a list of integers, counting backwards from 20 to 1. *e.g.,* [20, 19, 18, ..., 2, 1]"""

print('Integers from 20 to 1:')
for i in reversed(range(1, 20 +1)):
  print(i)
print()
for n in range(20,0,-1):
  print(n)

print(list(range(20,0,-1)))

"""7. Print only the even numbers, counting backwards from 20 to 2. *e.g.,* [20, 18, 16, ..., 4, 2]"""

print('Evens from 20 to 2:')
print(list(range(20,0,-2)))

print('Integers from 20 to 1:')
for i in reversed(range(1, 20 +1)):
  if i % 2 == 0:
    print(i)

"""8. Print only the odd numbers from 20 to 1, counting backwards. *e.g.,* [19, 17, 15, ..., 3, 1]"""

print('Odds from 20 to 1:')
print(list(range(19,0,-2)))

print('Integers from 20 to 1:')
for i in reversed(range(1, 20 +1)):
  if i % 2 != 0:
    print(i)

"""9. Print the multiples of 5, counting down from 100. *e.g.,* [100, 95, 90, ..., 10, 5]"""

print('Multiples of 5 descending from 100 to 5:')
for i in reversed(range(5, 100+1, 5)):
  print(i)

print(list(range(100,0,-5)))

"""10. Print the square of integers, descending from 10 to 1. *e.g.,* [100, 81, 64, ..., 4, 1]"""

print("Squares of integers descending from 10 to 1:")
for i in reversed(range(1,10+1)):
  square = i ** 2
  print(square)

print([n **2 for n in range(10,0,-1)])

# Here's a static list to work with in for the next cells
sample_list = [
    469, 755, 244, 245, 758, 450, 
    302, 20, 712, 71, 456, 21, 398, 
    339, 882, 848, 179, 535, 940, 472
]

"""11. Print the elements of sample_list, and the count of elements.

"""

print("Elements and count of sample_list:")
# Your code goes here
print(len(sample_list))

for i, count in enumerate(sample_list, start=1):
  print(i,count)

"""12. Print only the even numbers contained in sample_list, and their count."""

print("Even elements and their count:")
# even_count = 0
# for i in sample_list:
#   if i % 2 == 0:
#     even_count += 1
#     print(i, even_count)
# for i, count in enumerate(sample_list, start=1):
#   if i % 2 == 0:
#     print(i, count)

evens = []
for num in sample_list:
  if num % 2 == 0:
    evens.append(num)
print(evens, len(evens))

even = [n for n in sample_list if n % 2 ==0]
print(even, len(even))

"""13. Print only the odd numbers contained in sample_list, and their count."""

print("Odd elements and their count:")
even_count = 0
for i in sample_list:
  if i % 2 != 0:
    even_count += 1
    print(i, even_count)

odd = [n for n in sample_list if n % 2 ]
print(odd, len(odd))

"""14. Print the square of each element in sample_list."""

print("Squares of elements of sample_list:")
# for i in sample_list:
#   square = i ** 2
#   print(square)
# print()
square_list = [i**2 for i in sample_list]
print(square_list)

"""15. Print the sum of all the integers from 1 to 20."""

print("Sum of integers from 1 to 20:")
# sum = 0
# for i in range(1,21):
#   sum += i

# print(sum)

print(sum(range(1,21)))

"""16. Print the sum of all the elements in sample_list."""

print("Sum of elements of sample_list:")
sum = 0
for i in sample_list:
  sum = i + 1
print(sum)

"""17. Print the smallest (min) element in sample_list."""

print("Smallest (min) element of sample_list:")
print(min(sample_list))

"""18. Print the largest (max) element in sample_list."""

print("Largest (max) element of sample_list:")
print(max(sample_list))

"""## NICE JOB!  You are done ... Download/save this notebook as a .py file and submit!

_This looping kata prepared by: C1.JakeBerg_
"""